{{- /* layout:base.tmpl */ -}}

{{define "content"}}
<!-- Page Header -->
<section class="py-20 bg-gradient-to-r from-blue-500 to-indigo-600 text-white">
    <div class="container mx-auto px-4 text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-4">{{.Title}}</h1>
        <p class="text-xl text-blue-100 max-w-3xl mx-auto">{{.Subtitle}}</p>
    </div>
</section>

<!-- Blog Filter -->
<section class="pt-16 pb-8">
    <div class="container mx-auto px-4">
        <div class="flex flex-wrap justify-center gap-4 mb-8">
            <button 
                data-filter="all" 
                class="px-4 py-2 bg-primary text-white rounded-md filter-btn active"
            >
                All Posts
            </button>
            
            {{range .Categories}}
            <button 
                data-filter="{{slugify .}}" 
                class="px-4 py-2 bg-gray-200 text-gray-800 hover:bg-primary hover:text-white transition duration-300 rounded-md filter-btn"
            >
                {{.}}
            </button>
            {{end}}
        </div>
        
        <!-- Search Box -->
        <div class="max-w-xl mx-auto mt-8">
            <div class="relative">
                <input 
                    type="text" 
                    id="search-input" 
                    placeholder="Search blog posts..." 
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
                >
                <button 
                    id="search-button"
                    class="absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-primary"
                >
                    <i class="fas fa-search text-xl"></i>
                </button>
            </div>
        </div>
    </div>
</section>

<!-- Blog Grid -->
<section class="pb-20">
    <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="blog-grid">
            {{range .Posts}}
            <div class="blog-item" data-categories="{{range $index, $category := .Categories}}{{if $index}},{{end}}{{slugify $category}}{{end}}" data-title="{{lower .Title}}">
                {{template "blog-card" .}}
            </div>
            {{end}}
        </div>
        
        <!-- Empty State -->
        <div id="empty-state" class="hidden text-center py-20">
            <div class="text-gray-400 text-6xl mb-4">
                <i class="fas fa-search"></i>
            </div>
            <h3 class="text-2xl font-bold text-gray-700 mb-2">No posts found</h3>
            <p class="text-gray-600">No posts match your search criteria. Try a different search or category.</p>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const filterButtons = document.querySelectorAll('.filter-btn');
        const blogItems = document.querySelectorAll('.blog-item');
        const emptyState = document.getElementById('empty-state');
        const searchInput = document.getElementById('search-input');
        const searchButton = document.getElementById('search-button');
        
        // Filter function for both category and search
        const filterPosts = () => {
            const activeFilter = document.querySelector('.filter-btn.active').getAttribute('data-filter');
            const searchTerm = searchInput.value.toLowerCase();
            
            let visibleCount = 0;
            
            blogItems.forEach(item => {
                const categories = item.getAttribute('data-categories').split(',');
                const title = item.getAttribute('data-title');
                
                const matchesCategory = activeFilter === 'all' || categories.includes(activeFilter);
                const matchesSearch = searchTerm === '' || title.includes(searchTerm);
                
                if (matchesCategory && matchesSearch) {
                    item.classList.remove('hidden');
                    visibleCount++;
                } else {
                    item.classList.add('hidden');
                }
            });
            
            // Show empty state if no posts match the filter
            if (visibleCount === 0) {
                emptyState.classList.remove('hidden');
            } else {
                emptyState.classList.add('hidden');
            }
        };
        
        // Filter posts when a filter button is clicked
        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Update active button
                filterButtons.forEach(btn => btn.classList.remove('active', 'bg-primary', 'text-white'));
                filterButtons.forEach(btn => btn.classList.add('bg-gray-200', 'text-gray-800', 'hover:bg-primary', 'hover:text-white'));
                this.classList.add('active', 'bg-primary', 'text-white');
                this.classList.remove('bg-gray-200', 'text-gray-800', 'hover:bg-primary', 'hover:text-white');
                
                // Filter posts
                filterPosts();
            });
        });
        
        // Filter posts when search input changes
        searchInput.addEventListener('input', filterPosts);
        
        // Filter posts when search button is clicked
        searchButton.addEventListener('click', filterPosts);
    });
</script>
{{end}} 