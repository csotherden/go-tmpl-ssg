{{- /* layout:base.tmpl */ -}}

<div class="prose prose-blue max-w-none">
    <p class="lead text-lg text-gray-600">
        Go Template SSG provides several custom template functions that extend the built-in Go template functions. These functions can be used to format dates, manipulate strings, generate sequences, and more.
    </p>

    <h2 id="using-functions" class="text-2xl font-bold mt-8 mb-4">Using Template Functions</h2>
    <p>
        Template functions are used within your template files with the syntax <code>{{ "{{" }} funcName arg1 arg2 ... {{ "}}" }}</code>. For example:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;p&gt;Today is {{ "{{" }} nowFormat "January 2, 2006" {{ "}}" }}&lt;/p&gt;</code></pre>
    </div>

    <h2 id="available-functions" class="text-2xl font-bold mt-8 mb-4">Available Functions</h2>

    <h3 id="string-functions" class="text-xl font-semibold mt-6 mb-3">String Functions</h3>
    <table class="go-table w-full mt-4 mb-6">
        <thead class="bg-gray-100">
            <tr>
                <th class="py-2 px-4 text-left font-semibold border-b">Function</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Description</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Example</th>
            </tr>
        </thead>
        <tbody>
            <tr class="border-b">
                <td class="py-2 px-4"><code>html</code></td>
                <td class="py-2 px-4">Outputs a string as HTML without escaping</td>
                <td class="py-2 px-4"><code>{{ "{{" }} html "&lt;strong&gt;Bold&lt;/strong&gt;" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>upper</code></td>
                <td class="py-2 px-4">Converts string to uppercase</td>
                <td class="py-2 px-4"><code>{{ "{{" }} upper "text" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>lower</code></td>
                <td class="py-2 px-4">Converts string to lowercase</td>
                <td class="py-2 px-4"><code>{{ "{{" }} lower "TEXT" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>title</code></td>
                <td class="py-2 px-4">Converts string to title case</td>
                <td class="py-2 px-4"><code>{{ "{{" }} title "hello world" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>replace</code></td>
                <td class="py-2 px-4">Replaces all occurrences of a substring</td>
                <td class="py-2 px-4"><code>{{ "{{" }} replace "Hello World" "World" "Go" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>split</code></td>
                <td class="py-2 px-4">Splits a string into an array of substrings</td>
                <td class="py-2 px-4"><code>{{ "{{" }} split "a,b,c" "," {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>join</code></td>
                <td class="py-2 px-4">Joins array elements with a separator</td>
                <td class="py-2 px-4"><code>{{ "{{" }} join .Items ", " {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>trim</code></td>
                <td class="py-2 px-4">Removes leading and trailing whitespace</td>
                <td class="py-2 px-4"><code>{{ "{{" }} trim "  text  " {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>trimPrefix</code></td>
                <td class="py-2 px-4">Removes specified prefix from string</td>
                <td class="py-2 px-4"><code>{{ "{{" }} trimPrefix "prefix-text" "prefix-" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>trimSuffix</code></td>
                <td class="py-2 px-4">Removes specified suffix from string</td>
                <td class="py-2 px-4"><code>{{ "{{" }} trimSuffix "text-suffix" "-suffix" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>truncate</code></td>
                <td class="py-2 px-4">Truncates string to specified length and adds ellipsis</td>
                <td class="py-2 px-4"><code>{{ "{{" }} truncate "Long text here" 10 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>markdownify</code></td>
                <td class="py-2 px-4">Basic conversion of markdown text to HTML</td>
                <td class="py-2 px-4"><code>{{ "{{" }} markdownify .Content {{ "}}" }}</code></td>
            </tr>
        </tbody>
    </table>

    <h3 id="date-functions" class="text-xl font-semibold mt-6 mb-3">Date and Time Functions</h3>
    <table class="go-table w-full mt-4 mb-6">
        <thead class="bg-gray-100">
            <tr>
                <th class="py-2 px-4 text-left font-semibold border-b">Function</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Description</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Example</th>
            </tr>
        </thead>
        <tbody>
            <tr class="border-b">
                <td class="py-2 px-4"><code>now</code></td>
                <td class="py-2 px-4">Returns the current time as a string</td>
                <td class="py-2 px-4"><code>{{ "{{" }} now {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>nowFormat</code></td>
                <td class="py-2 px-4">Returns the current time formatted according to the Go time format layout</td>
                <td class="py-2 px-4"><code>{{ "{{" }} nowFormat "2006-01-02" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>formatDate</code></td>
                <td class="py-2 px-4">Formats a date string (RFC3339 format) using the specified layout</td>
                <td class="py-2 px-4"><code>{{ "{{" }} formatDate "2023-04-01T15:04:05Z" "January 2, 2006" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>dateFromFormat</code></td>
                <td class="py-2 px-4">Converts a date from one format to another</td>
                <td class="py-2 px-4"><code>{{ "{{" }} dateFromFormat "2023-04-01" "2006-01-02" "Jan 2, 2006" {{ "}}" }}</code></td>
            </tr>
        </tbody>
    </table>

    <h3 id="math-functions" class="text-xl font-semibold mt-6 mb-3">Math Functions</h3>
    <table class="go-table w-full mt-4 mb-6">
        <thead class="bg-gray-100">
            <tr>
                <th class="py-2 px-4 text-left font-semibold border-b">Function</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Description</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Example</th>
            </tr>
        </thead>
        <tbody>
            <tr class="border-b">
                <td class="py-2 px-4"><code>add</code></td>
                <td class="py-2 px-4">Adds two integers</td>
                <td class="py-2 px-4"><code>{{ "{{" }} add 1 2 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>sub</code></td>
                <td class="py-2 px-4">Subtracts second integer from first</td>
                <td class="py-2 px-4"><code>{{ "{{" }} sub 5 2 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>mul</code></td>
                <td class="py-2 px-4">Multiplies two integers</td>
                <td class="py-2 px-4"><code>{{ "{{" }} mul 3 4 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>div</code></td>
                <td class="py-2 px-4">Divides first integer by second</td>
                <td class="py-2 px-4"><code>{{ "{{" }} div 8 2 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>mod</code></td>
                <td class="py-2 px-4">Returns remainder of division</td>
                <td class="py-2 px-4"><code>{{ "{{" }} mod 5 2 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>abs</code></td>
                <td class="py-2 px-4">Returns absolute value of a number</td>
                <td class="py-2 px-4"><code>{{ "{{" }} abs -10 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>max</code></td>
                <td class="py-2 px-4">Returns the larger of two numbers</td>
                <td class="py-2 px-4"><code>{{ "{{" }} max 5 10 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>min</code></td>
                <td class="py-2 px-4">Returns the smaller of two numbers</td>
                <td class="py-2 px-4"><code>{{ "{{" }} min 5 10 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>ceil</code></td>
                <td class="py-2 px-4">Rounds a float up to the nearest integer</td>
                <td class="py-2 px-4"><code>{{ "{{" }} ceil 4.2 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>floor</code></td>
                <td class="py-2 px-4">Rounds a float down to the nearest integer</td>
                <td class="py-2 px-4"><code>{{ "{{" }} floor 4.8 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>round</code></td>
                <td class="py-2 px-4">Rounds a float to the nearest integer</td>
                <td class="py-2 px-4"><code>{{ "{{" }} round 4.5 {{ "}}" }}</code></td>
            </tr>
        </tbody>
    </table>

    <h3 id="sequence-functions" class="text-xl font-semibold mt-6 mb-3">Sequence and Iteration Functions</h3>
    <table class="go-table w-full mt-4 mb-6">
        <thead class="bg-gray-100">
            <tr>
                <th class="py-2 px-4 text-left font-semibold border-b">Function</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Description</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Example</th>
            </tr>
        </thead>
        <tbody>
            <tr class="border-b">
                <td class="py-2 px-4"><code>seq</code></td>
                <td class="py-2 px-4">Generates a sequence of integers from start to end</td>
                <td class="py-2 px-4"><code>{{ "{{" }} range seq 1 5 {{ "}}" }}{{ "{{" }} . {{ "}}" }}{{ "{{" }} end {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>slice</code></td>
                <td class="py-2 px-4">Creates a slice of an array</td>
                <td class="py-2 px-4"><code>{{ "{{" }} slice .Items 0 5 {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>first</code></td>
                <td class="py-2 px-4">Returns the first item in an array</td>
                <td class="py-2 px-4"><code>{{ "{{" }} first .Items {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>last</code></td>
                <td class="py-2 px-4">Returns the last item in an array</td>
                <td class="py-2 px-4"><code>{{ "{{" }} last .Items {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>contains</code></td>
                <td class="py-2 px-4">Checks if a string array contains a specific string</td>
                <td class="py-2 px-4"><code>{{ "{{" }} contains .Tags "featured" {{ "}}" }}</code></td>
            </tr>
        </tbody>
    </table>

    <h3 id="url-path-functions" class="text-xl font-semibold mt-6 mb-3">URL and Path Functions</h3>
    <table class="go-table w-full mt-4 mb-6">
        <thead class="bg-gray-100">
            <tr>
                <th class="py-2 px-4 text-left font-semibold border-b">Function</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Description</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Example</th>
            </tr>
        </thead>
        <tbody>
            <tr class="border-b">
                <td class="py-2 px-4"><code>urlEscape</code></td>
                <td class="py-2 px-4">Escapes a string for use in URLs</td>
                <td class="py-2 px-4"><code>{{ "{{" }} urlEscape "query with spaces" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>urlUnescape</code></td>
                <td class="py-2 px-4">Unescapes a URL-encoded string</td>
                <td class="py-2 px-4"><code>{{ "{{" }} urlUnescape "query+with+spaces" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>slugify</code></td>
                <td class="py-2 px-4">Converts a string to a URL-friendly slug</td>
                <td class="py-2 px-4"><code>{{ "{{" }} slugify "Hello World! 123" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>base</code></td>
                <td class="py-2 px-4">Gets the last element of a path</td>
                <td class="py-2 px-4"><code>{{ "{{" }} base "/path/to/file.txt" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>dir</code></td>
                <td class="py-2 px-4">Gets the directory portion of a path</td>
                <td class="py-2 px-4"><code>{{ "{{" }} dir "/path/to/file.txt" {{ "}}" }}</code></td>
            </tr>
            <tr class="border-b">
                <td class="py-2 px-4"><code>ext</code></td>
                <td class="py-2 px-4">Gets the file extension</td>
                <td class="py-2 px-4"><code>{{ "{{" }} ext "/path/to/file.txt" {{ "}}" }}</code></td>
            </tr>
        </tbody>
    </table>

    <h3 id="conditional-functions" class="text-xl font-semibold mt-6 mb-3">Conditional Functions</h3>
    <table class="go-table w-full mt-4 mb-6">
        <thead class="bg-gray-100">
            <tr>
                <th class="py-2 px-4 text-left font-semibold border-b">Function</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Description</th>
                <th class="py-2 px-4 text-left font-semibold border-b">Example</th>
            </tr>
        </thead>
        <tbody>
            <tr class="border-b">
                <td class="py-2 px-4"><code>default</code></td>
                <td class="py-2 px-4">Returns default value if given value is empty</td>
                <td class="py-2 px-4"><code>{{ "{{" }} default "Untitled" .Title {{ "}}" }}</code></td>
            </tr>
        </tbody>
    </table>

    <h2 id="practical-examples" class="text-2xl font-bold mt-8 mb-4">Practical Examples</h2>

    <h3 id="date-formatting" class="text-xl font-semibold mt-6 mb-3">Date Formatting</h3>
    <p>
        Formatting dates is a common task in websites. The following example displays the current date in a friendly format:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;p&gt;Generated on {{ "{{" }} nowFormat "January 2, 2006" {{ "}}" }}&lt;/p&gt;</code></pre>
    </div>

    <p>Output:</p>
    <div class="bg-white border border-gray-200 rounded-md p-4 mb-6">
        <p>Generated on {{nowFormat "January 2, 2006"}}</p>
    </div>

    <p>
        For formatting a specific date field from your data:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;p&gt;Published: {{ "{{" }} formatDate .PublishDate "January 2, 2006" {{ "}}" }}&lt;/p&gt;</code></pre>
    </div>

    <h3 id="url-slugs" class="text-xl font-semibold mt-6 mb-3">Creating URL Slugs</h3>
    <p>
        The <code>slugify</code> function is useful for creating URL-friendly slugs from titles:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;a href="/posts/{{ "{{" }} slugify .Title {{ "}}" }}"&gt;{{ "{{" }} .Title {{ "}}" }}&lt;/a&gt;</code></pre>
    </div>

    <h3 id="pagination" class="text-xl font-semibold mt-6 mb-3">Creating Pagination Links</h3>
    <p>
        The <code>seq</code> function is useful for creating pagination controls:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;nav class="pagination"&gt;
  {{ "{{" }} range seq 1 .Iterations.TotalPages {{ "}}" }}
    &lt;a href="{{ "{{" }} $.Iterations.PageRoot {{ "}}" }}/{{ "{{" }} . {{ "}}" }}/"&gt;{{ "{{" }} . {{ "}}" }}&lt;/a&gt;
  {{ "{{" }} end {{ "}}" }}
&lt;/nav&gt;</code></pre>
    </div>

    <h3 id="html-content" class="text-xl font-semibold mt-6 mb-3">Using HTML Content</h3>
    <p>
        The <code>html</code> function allows you to output HTML content without escaping:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;div class="article-content"&gt;
  {{ "{{" }} html .RichTextContent {{ "}}" }}
&lt;/div&gt;</code></pre>
    </div>

    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 my-6">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <h3 class="text-sm font-medium text-yellow-800">Security Warning</h3>
                <div class="mt-2 text-sm text-yellow-700">
                    <p>
                        Only use the <code>html</code> function with trusted content. Using it with user-generated content may expose your site to cross-site scripting (XSS) vulnerabilities.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <h3 id="using-defaults" class="text-xl font-semibold mt-6 mb-3">Using Default Values</h3>
    <p>
        The <code>default</code> function provides a default value when a field might be empty:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;h1&gt;{{ "{{" }} default "Untitled Post" .Title {{ "}}" }}&lt;/h1&gt;</code></pre>
    </div>

    <h3 id="combining-functions" class="text-xl font-semibold mt-6 mb-3">Combining Functions</h3>
    <p>
        You can combine multiple functions in a single expression. For example, to create a URL-friendly version of a title:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;a href="/posts/{{ "{{" }} slugify (lower .Title) {{ "}}" }}"&gt;{{ "{{" }} .Title {{ "}}" }}&lt;/a&gt;</code></pre>
    </div>

    <h2 id="extending" class="text-2xl font-bold mt-8 mb-4">Adding Custom Functions</h2>
    <p>
        You can extend Go Template SSG with your own custom functions by modifying the <code>FuncMap</code> function in <code>template_funcs.go</code>:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>func FuncMap() template.FuncMap {
    return template.FuncMap{
        // Existing functions...
        
        // Your custom function
        "customFunc": func(s string) string {
            return "Custom: " + s
        },
    }
}</code></pre>
    </div>

    <p>
        This would add a <code>customFunc</code> function that you could use like:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;p&gt;{{ "{{" }} customFunc .Description {{ "}}" }}&lt;/p&gt;</code></pre>
    </div>

    <h2 id="next-steps" class="text-2xl font-bold mt-8 mb-4">Next Steps</h2>
    <p>
        Now that you understand how to use template functions, check out these related topics:
    </p>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
        <a href="/guide/data/" class="go-card block hover:no-underline">
            <h3 class="text-lg font-semibold text-go-blue">Data Files</h3>
            <p class="text-gray-600">Learn how to provide data to your templates using JSON files.</p>
        </a>
        <a href="/guide/pagination/" class="go-card block hover:no-underline">
            <h3 class="text-lg font-semibold text-go-blue">Pagination</h3>
            <p class="text-gray-600">Learn how to paginate large datasets in your templates.</p>
        </a>
    </div>
</div> 