{{- /* layout:base.tmpl */ -}}

<div class="prose prose-blue max-w-none">
    <p class="lead text-lg text-gray-600">
        Sitemap generation is an important feature for SEO, helping search engines discover and index all the pages on your site. Go Template SSG provides built-in sitemap generation capabilities.
    </p>

    <h2 id="what-is-sitemap" class="text-2xl font-bold mt-8 mb-4">What Is a Sitemap?</h2>
    <p>
        A sitemap is an XML file that lists all the pages on your website. It helps search engines discover pages on your site and understand your site structure. Sitemaps are particularly useful for:
    </p>

    <ul class="list-disc pl-5 mt-2 mb-4">
        <li class="mb-1">Large websites with many pages</li>
        <li class="mb-1">New websites that don't have many external links</li>
        <li class="mb-1">Websites with pages that aren't well linked to each other</li>
        <li class="mb-1">Websites that use rich media content or are shown in Google News</li>
    </ul>

    <p>
        Go Template SSG can automatically generate a sitemap.xml file for your static site.
    </p>

    <h2 id="enabling-sitemap" class="text-2xl font-bold mt-8 mb-4">Enabling Sitemap Generation</h2>
    <p>
        To enable sitemap generation, use the <code>--sitemap</code> flag when running the generator:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>go run ./cmd/go-tmpl-generate --template ./templates --output ./output --sitemap</code></pre>
    </div>

    <p>
        This will create a <code>sitemap.xml</code> file in your output directory that includes all HTML pages generated from your templates.
    </p>

    <h2 id="setting-base-url" class="text-2xl font-bold mt-8 mb-4">Setting the Base URL</h2>
    <p>
        For sitemaps to be most effective, you should specify the base URL of your site. This ensures that the URLs in your sitemap are absolute URLs (starting with http:// or https://), which is required by search engines.
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>go run ./cmd/go-tmpl-generate --template ./templates --output ./output --sitemap --base-url "https://example.com"</code></pre>
    </div>

    <p>
        Without a base URL, the sitemap will still be generated, but the URLs will be relative paths, which may not be correctly interpreted by search engines.
    </p>

    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 my-6">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <h3 class="text-sm font-medium text-yellow-800">Important</h3>
                <div class="mt-2 text-sm text-yellow-700">
                    <p>
                        Always use the <code>--base-url</code> flag with the complete URL of your site in production environments. For development testing, you can omit it.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <h2 id="sitemap-structure" class="text-2xl font-bold mt-8 mb-4">Sitemap Structure</h2>
    <p>
        The generated sitemap follows the standard <a href="https://www.sitemaps.org/protocol.html" target="_blank" rel="noopener" class="text-blue-600 hover:text-blue-800">Sitemap Protocol</a> and has a structure like this:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;urlset&gt;
  &lt;url&gt;
    &lt;loc&gt;https://example.com/index.html&lt;/loc&gt;
  &lt;/url&gt;
  &lt;url&gt;
    &lt;loc&gt;https://example.com/about.html&lt;/loc&gt;
  &lt;/url&gt;
  &lt;url&gt;
    &lt;loc&gt;https://example.com/blog/post1.html&lt;/loc&gt;
  &lt;/url&gt;
  &lt;!-- More URLs for all HTML pages --&gt;
&lt;/urlset&gt;</code></pre>
    </div>

    <p>
        The sitemap includes all HTML files in your output directory, including those in subdirectories.
    </p>

    <h2 id="how-it-works" class="text-2xl font-bold mt-8 mb-4">How Sitemap Generation Works</h2>
    <p>
        The sitemap generation process in Go Template SSG is straightforward:
    </p>

    <ol class="list-decimal pl-5 mt-2 mb-4">
        <li class="mb-2">The generator compiles a list of all HTML files created during the site generation process</li>
        <li class="mb-2">It converts the file paths to URLs by:
            <ul class="list-disc pl-5 mt-1 mb-1">
                <li class="mb-1">Replacing backslashes with forward slashes for Windows compatibility</li>
                <li class="mb-1">Prepending the base URL if provided</li>
            </ul>
        </li>
        <li class="mb-2">It writes these URLs to a sitemap.xml file in the root of the output directory</li>
    </ol>

    <p>
        Here's a simplified look at the sitemap generation code:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>func generateSitemap(outputDir, baseURL string, htmlFiles []string) error {
    type URL struct {
        Loc string `xml:"loc"`
    }
    type URLSet struct {
        XMLName xml.Name `xml:"urlset"`
        URLs    []URL    `xml:"url"`
    }

    var urls []URL
    for _, file := range htmlFiles {
        relPath, _ := filepath.Rel(outputDir, file)
        urls = append(urls, URL{Loc: baseURL + "/" + strings.ReplaceAll(relPath, "\\", "/")})
    }

    urlSet := URLSet{URLs: urls}
    file, err := os.Create(filepath.Join(outputDir, "sitemap.xml"))
    if err != nil {
        return err
    }
    defer file.Close()

    encoder := xml.NewEncoder(file)
    encoder.Indent("", "  ")
    return encoder.Encode(urlSet)
}</code></pre>
    </div>

    <h2 id="configuring-in-siteconfig" class="text-2xl font-bold mt-8 mb-4">Configuring in SiteConfig</h2>
    <p>
        If you're using the generator programmatically via the Go API, you can configure sitemap generation in the <code>SiteConfig</code> struct:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code>config := generator.SiteConfig{
    TemplateDir:     "./templates",
    OutputDir:       "./output",
    GenerateSitemap: true,            // Enable sitemap generation
    BaseURL:         "https://example.com",  // Set the base URL
}

siteGen := generator.NewSiteGenerator(config)
err := siteGen.GenerateSite()</code></pre>
    </div>

    <h2 id="submitting-sitemap" class="text-2xl font-bold mt-8 mb-4">Submitting Your Sitemap to Search Engines</h2>
    <p>
        After generating your sitemap, you should submit it to search engines to help them discover and index your pages more efficiently. Here's how to do it for major search engines:
    </p>

    <h3 class="text-xl font-semibold mt-6 mb-3">Google Search Console</h3>
    <ol class="list-decimal pl-5 mt-2 mb-4">
        <li class="mb-1">Create or sign in to your <a href="https://search.google.com/search-console" target="_blank" rel="noopener" class="text-blue-600 hover:text-blue-800">Google Search Console</a> account</li>
        <li class="mb-1">Add and verify your website</li>
        <li class="mb-1">Navigate to "Sitemaps" in the left sidebar</li>
        <li class="mb-1">Enter the URL of your sitemap (e.g., <code>https://example.com/sitemap.xml</code>)</li>
        <li class="mb-1">Click "Submit"</li>
    </ol>

    <h3 class="text-xl font-semibold mt-6 mb-3">Bing Webmaster Tools</h3>
    <ol class="list-decimal pl-5 mt-2 mb-4">
        <li class="mb-1">Create or sign in to your <a href="https://www.bing.com/webmasters/about" target="_blank" rel="noopener" class="text-blue-600 hover:text-blue-800">Bing Webmaster Tools</a> account</li>
        <li class="mb-1">Add and verify your website</li>
        <li class="mb-1">Navigate to "Sitemaps" in the left menu</li>
        <li class="mb-1">Enter the URL of your sitemap</li>
        <li class="mb-1">Click "Submit"</li>
    </ol>

    <h2 id="adding-to-robots" class="text-2xl font-bold mt-8 mb-4">Adding Sitemap to robots.txt</h2>
    <p>
        It's also a good practice to reference your sitemap in your robots.txt file, which helps search engines find it:
    </p>

    <div class="bg-gray-50 rounded-md p-4 mb-6 overflow-x-auto">
        <pre><code># robots.txt
User-agent: *
Allow: /

Sitemap: https://example.com/sitemap.xml</code></pre>
    </div>

    <p>
        Place this robots.txt file in your <code>templates/pages/</code> directory, and it will be copied to the root of your output directory during generation.
    </p>

    <h2 id="best-practices" class="text-2xl font-bold mt-8 mb-4">Best Practices for Sitemaps</h2>

    <h3 class="text-xl font-semibold mt-6 mb-3">Keep It Updated</h3>
    <p>
        Regenerate your sitemap whenever you add, remove, or significantly update pages on your site. If you're using a CI/CD pipeline, make sure sitemap generation is part of your build process.
    </p>

    <h3 class="text-xl font-semibold mt-6 mb-3">Use Clean URLs</h3>
    <p>
        If your web server supports it, configure it to serve <code>index.html</code> files when a directory is requested, allowing for cleaner URLs without the <code>.html</code> extension. This approach works well with the sitemap generation.
    </p>

    <h3 class="text-xl font-semibold mt-6 mb-3">Include Only Indexable Content</h3>
    <p>
        Your sitemap should only include pages that you want search engines to index. Pages like login, admin interfaces, or duplicate content should typically be excluded.
    </p>

    <div class="bg-blue-50 border-l-4 border-blue-500 p-4 my-6">
        <div class="flex">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-blue-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <h3 class="text-sm font-medium text-blue-800">Note</h3>
                <div class="mt-2 text-sm text-blue-700">
                    <p>
                        Currently, Go Template SSG includes all HTML files in the sitemap. If you need to exclude certain pages, you would need to remove them from the sitemap.xml file after generation, or implement a custom sitemap generation function.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <h2 id="next-steps" class="text-2xl font-bold mt-8 mb-4">Next Steps</h2>
    <p>
        Now that you understand how to generate sitemaps, you might want to explore:
    </p>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
        <a href="/guide/production/" class="go-card block hover:no-underline">
            <h3 class="text-lg font-semibold text-go-blue">Production Build</h3>
            <p class="text-gray-600">Learn how to build and optimize your site for production deployment.</p>
        </a>
        <a href="/guide/hosting/" class="go-card block hover:no-underline">
            <h3 class="text-lg font-semibold text-go-blue">Hosting Options</h3>
            <p class="text-gray-600">Explore different options for hosting your static site.</p>
        </a>
    </div>
</div> 